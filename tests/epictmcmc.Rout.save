
R version 3.6.1 (2019-07-05) -- "Action of the Toes"
Copyright (C) 2019 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin15.6.0 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library(EpiILMCT)
Loading required package: coda
Loading required package: parallel
> set.seed(22)
> ## distance-based SIR continuous-time ILMs ##
> data(SpatialData)
> ## performing the MCMC-tool for analyzing the fully observed spatial data
> ## under the SIR distance-based continuous ILM:
> suspar <- list(NULL)
> suspar[[1]]<-list(2,c("gamma", 1, 0.01, 0.5))
> suspar[[2]]<- rep(1,length(SpatialData$epidat[,1]))
> kernel1 <- list(2, c("gamma", 1, 0.01, 0.5))
> 
> mcmcres2 <- epictmcmc(object = SpatialData,
+ distancekernel = "powerlaw", datatype = "known epidemic", nsim = 50,
+ control.sus = suspar,
+ kernel.par = kernel1)
************************************************ 
Start performing MCMC for the  known epidemic  SIR ILM for 
50 iterations 
************************************************ 
> #plot(mcmcres2, plottype = "parameter")
> print(mcmcres2)

********************************************************* 
Model: SIR distance -based continuous-time ILM 
Method: Markov chain Monte Carlo (MCMC) 
Data assumption: fully observed epidemic
********************************************************* 

Output: 

 parameter.samples : 
Markov Chain Monte Carlo (MCMC) output:
Start = 1 
End = 7 
Thinning interval = 1 
     Alpha_s[1] Spatial parameter
[1,]    2.00000           2.00000
[2,]    2.00000           2.00000
[3,]    1.50826           2.00000
[4,]    1.03277           2.53348
[5,]    1.38699           2.53348
[6,]    1.38699           2.57478
[7,]    2.31436           2.44046

 log.likelihood : 
Markov Chain Monte Carlo (MCMC) output:
Start = 1 
End = 7 
Thinning interval = 1 
[1] -3.06312 -3.06312  1.14963 10.59471 13.58724 14.09541 10.90346

Available components:
[1] "compart.framework" "kernel.type"       "data.assumption"  
[4] "parameter.samples" "log.likelihood"    "acceptance.rate"  
[7] "number.iteration"  "number.parameter"  "number.chains"    
> summary(mcmcres2)

********************************************************* 
Model: SIR distance-based continuous-time ILM 
Method: Markov chain Monte Carlo (MCMC) 
Data assumption: fully observed epidemic 
number.chains : 1 chains 
number.iteration : 49 iterations 
number.parameter : 2 parameters 

********************************************************* 


 1. Empirical mean and standard deviation for each variable,
plus standard error of the mean:
                     Mean       SD  Naive SE Time-series SE
Alpha_s[1]        1.89607 0.306726 0.0433776      0.0673176
Spatial parameter 2.96792 0.338620 0.0478882      0.1142946



 2. Quantiles for each variable:
                     2.5%     25%     50%     75%   97.5%
Alpha_s[1]        1.38699 1.73027 1.95966 2.06507 2.43753
Spatial parameter 2.00000 2.84056 3.03490 3.22303 3.30094



 3. Empirical mean, standard deviation, and quantiles for the log likelihood,
          Mean             SD       Naive SE Time-series SE 
     16.293955       4.939316       0.698525       1.504505 

    2.5%      25%      50%      75%    97.5% 
-2.11525 17.20890 18.01699 18.49467 18.74961 



 4. acceptance.rate : 
       Alpha_s[1] Spatial parameter 
         0.612245          0.387755 
> 
> suspar <- list(NULL)
> suspar[[1]]<-list(2,c("gamma", 1, 0.1, 2.5))
> suspar[[2]]<- matrix(rep(1,length(SpatialData$epidat[,1])),ncol=1)
> kernel1 <- list(0.2, c("gamma", 1, 0.1, 0.01))
> 
> mcmcres22 <- epictmcmc(object = SpatialData,
+ distancekernel = "Cauchy", datatype = "known epidemic", nsim = 50,
+ control.sus = suspar,
+ kernel.par = kernel1)
************************************************ 
Start performing MCMC for the  known epidemic  SIR ILM for 
50 iterations 
************************************************ 
> #plot(mcmcres22, plottype = "parameter")
> print(mcmcres22)

********************************************************* 
Model: SIR distance -based continuous-time ILM 
Method: Markov chain Monte Carlo (MCMC) 
Data assumption: fully observed epidemic
********************************************************* 

Output: 

 parameter.samples : 
Markov Chain Monte Carlo (MCMC) output:
Start = 1 
End = 7 
Thinning interval = 1 
     Alpha_s[1] Spatial parameter
[1,]    2.00000          0.200000
[2,]    7.20904          0.200000
[3,]    7.20904          0.192428
[4,]    6.61663          0.188696
[5,]    6.32853          0.188696
[6,]    6.32853          0.202810
[7,]    6.32853          0.208162

 log.likelihood : 
Markov Chain Monte Carlo (MCMC) output:
Start = 1 
End = 7 
Thinning interval = 1 
[1] -16.30159  -2.55599  -2.14931  -1.77451  -1.77184  -2.21233  -2.41781

Available components:
[1] "compart.framework" "kernel.type"       "data.assumption"  
[4] "parameter.samples" "log.likelihood"    "acceptance.rate"  
[7] "number.iteration"  "number.parameter"  "number.chains"    
> summary(mcmcres22)

********************************************************* 
Model: SIR distance-based continuous-time ILM 
Method: Markov chain Monte Carlo (MCMC) 
Data assumption: fully observed epidemic 
number.chains : 1 chains 
number.iteration : 49 iterations 
number.parameter : 2 parameters 

********************************************************* 


 1. Empirical mean and standard deviation for each variable,
plus standard error of the mean:
                      Mean       SD   Naive SE Time-series SE
Alpha_s[1]        6.814363 1.730951 0.24479343      0.5314169
Spatial parameter 0.184182 0.015674 0.00221663      0.0063711



 2. Quantiles for each variable:
                      2.5%      25%      50%      75%     97.5%
Alpha_s[1]        4.152365 5.891223 6.642539 7.348461 10.360924
Spatial parameter 0.160209 0.170313 0.186134 0.196272  0.208162



 3. Empirical mean, standard deviation, and quantiles for the log likelihood,
          Mean             SD       Naive SE Time-series SE 
     -2.660488       2.132398       0.301567       0.301567 

    2.5%      25%      50%      75%    97.5% 
-4.93207 -2.60576 -2.21981 -1.77649 -1.23782 



 4. acceptance.rate : 
       Alpha_s[1] Spatial parameter 
         0.530612          0.897959 
> 
> #plot(mcmcres2$log.likelihood)
> #plot(mcmcres22$log.likelihood)
> 
> ## performing the MCMC-tool for analyzing the partially observed spatial
> ## data (unknown infection times) under the SIR distance-based
> ## continuous ILM:
> 
> suspar <- list(NULL)
> suspar[[1]]<-list(2,c("gamma", 1, 0.01, 0.8))
> suspar[[2]]<- matrix(rep(1,length(SpatialData$epidat[,1])),ncol=1)
> kernel1 <- list(2, c("gamma", 1, 0.01, 0.5))
> 
> mcmcres22 <- epictmcmc(object = SpatialData, distancekernel = "powerlaw",
+ datatype = "known removal", nsim = 50,
+ control.sus = suspar, kernel.par = kernel1, delta = list(1, 2, c(4, 2)))
************************************************ 
Start performing MCMC for the  known removal  SIR ILM for 
50 iterations 
************************************************ 
> 
> #plot(mcmcres22, plottype = "parameter")
> print(mcmcres22)

********************************************************* 
Model: SIR distance -based continuous-time ILM 
Method: Data augmented Markov chain Monte Carlo (DA-MCMC) 
Data assumption: partially observed epidemic (unknown infection times)
********************************************************* 

Output: 

 parameter.samples : 
Markov Chain Monte Carlo (MCMC) output:
Start = 1 
End = 7 
Thinning interval = 1 
     Alpha_s[1] Spatial parameter Infectious period rate
[1,]   2.000000           2.00000                2.00000
[2,]   2.000000           2.00000                1.68393
[3,]   1.468239           2.00000                1.74881
[4,]   0.769424           2.06189                1.69124
[5,]   0.769424           2.06189                1.63194
[6,]   1.058423           2.65603                2.00467
[7,]   1.979617           3.04849                2.14446

 log.likelihood : 
Markov Chain Monte Carlo (MCMC) output:
Start = 1 
End = 7 
Thinning interval = 1 
[1] -37.5869 -30.6891 -30.8283 -31.7703 -32.1660 -27.0975 -31.6516

 infection.times.samples : 
Markov Chain Monte Carlo (MCMC) output:
Start = 1 
End = 7 
Thinning interval = 1 
     [,1]       [,2]     [,3]     [,4]     [,5]     [,6]     [,7]     [,8]
[1,]    0 0.00205424 0.170259 0.171529 0.229401 0.266345 0.296273 0.305499
[2,]    0 0.00205424 0.170259 0.171529 0.229401 0.266345 0.296273 0.305499
[3,]    0 0.00205424 0.170259 0.171529 0.229401 0.266345 0.296273 0.305499
[4,]    0 0.00205424 0.170259 0.129142 0.229401 0.266345 0.296273 0.305499
[5,]    0 0.00205424 0.170259 0.126579 0.574683 0.266345 0.296273 0.305499
[6,]    0 0.00205424 0.170259 0.173654 0.543768 0.384592 0.296273 0.305499
[7,]    0 0.00205424 0.170259 0.173654 0.118744 0.384592 0.296273 0.305499
         [,9]     [,10]    [,11]    [,12]    [,13]    [,14]   [,15]   [,16]
[1,] 0.318990 0.3376868 0.362637 0.403727 0.432961 0.591705 2.28403 2.32537
[2,] 0.318990 0.3376868 0.360203 0.441448 0.432961 0.591705 2.28403 2.32537
[3,] 0.318990 0.4806679 0.360203 0.407030 0.432961 0.591705 2.28403 2.32537
[4,] 0.318990 0.4806679 0.360203 0.407030 0.432961 0.591705 2.28403 2.36253
[5,] 0.350192 0.4806679 0.360203 0.407030 0.378509 0.591705 2.28403 2.36253
[6,] 0.350192 0.4405425 0.360203 0.407030 0.378509 0.591705 2.40133 2.28223
[7,] 0.350192 0.0437945 0.360203 0.368562 0.378509 0.591705 2.46112 2.39644
       [,17]   [,18]   [,19]   [,20]   [,21]   [,22]   [,23]   [,24]  [,25]
[1,] 2.34818 2.57043 2.57258 2.57268 2.57963 2.59514 2.60761 2.60862 2.6131
[2,] 2.34818 2.57043 2.57258 2.57268 2.57963 2.59514 2.60761 2.60862 2.6131
[3,] 2.34818 2.57043 2.57258 2.57268 2.57963 2.59514 2.60761 2.60862 2.6131
[4,] 2.34818 2.57043 2.57258 2.57268 2.57963 2.59514 2.60761 2.60862 2.6131
[5,] 2.34818 2.57043 2.57347 2.57268 2.57963 2.57608 2.60761 3.21554 2.6131
[6,] 2.51273 2.57043 2.57347 2.57268 2.57963 2.57608 2.60761 3.13657 2.6131
[7,] 2.50495 2.57043 2.57347 2.57268 2.57963 2.60976 2.60761 3.30307 2.6131
       [,26]   [,27]   [,28]   [,29]   [,30]   [,31]   [,32]   [,33]
[1,] 2.61327 2.62189 2.75117 2.89072 2.93546 3.15278 3.72520 3.93308
[2,] 2.61327 2.62189 2.75117 2.89072 2.93546 3.15278 3.44762 3.93987
[3,] 2.61327 2.62189 2.75117 2.89072 2.63114 3.15278 3.44762 2.49516
[4,] 2.61327 2.62189 2.68837 2.40012 2.63114 2.85644 3.44762 2.49516
[5,] 2.61327 2.62189 2.53495 4.07396 2.63114 2.87806 3.44762 3.00887
[6,] 2.61327 2.62189 2.53495 3.18701 2.61734 2.88492 3.44762 4.01186
[7,] 2.61327 2.62189 2.53495 3.64901 2.61734 3.33963 3.44762 3.60033

 Average.infectious.periods : 
Markov Chain Monte Carlo (MCMC) output:
Start = 1 
End = 7 
Thinning interval = 1 
[1] 0.526360 0.533497 0.583209 0.609117 0.519299 0.509422 0.509078

Available components:
 [1] "compart.framework"          "kernel.type"               
 [3] "data.assumption"            "parameter.samples"         
 [5] "log.likelihood"             "acceptance.rate"           
 [7] "number.iteration"           "number.parameter"          
 [9] "number.chains"              "infection.times.samples"   
[11] "Average.infectious.periods"
> summary(mcmcres22)

********************************************************* 
Model:SIR distance-based continuous-time ILM 
Method: Data augmented Markov chain Monte Carlo (DA-MCMC) 
Data assumption: partially observed epidemic (unknown infection times) 
number.chains : 1 chains 
number.iteration : 49 iterations 
number.parameter : 3 parameters
********************************************************* 


 1. Empirical mean and standard deviation for each variable,
plus standard error of the mean:
                          Mean       SD  Naive SE Time-series SE
Alpha_s[1]             1.48846 0.340927 0.0482143      0.0798859
Spatial parameter      2.72630 0.304536 0.0430679      0.0873640
Infectious period rate 1.94589 0.300679 0.0425224      0.0425224



 2. Quantiles for each variable:
                           2.5%     25%     50%     75%   97.5%
Alpha_s[1]             0.834449 1.26014 1.44916 1.69274 2.08718
Spatial parameter      2.000000 2.62407 2.75524 2.85487 3.39218
Infectious period rate 1.332744 1.72543 1.96393 2.13026 2.47657



 3. Empirical mean, standard deviation, and quantiles for the log likelihood,
          Mean             SD       Naive SE Time-series SE 
     -25.33535        7.12539        1.00768        2.36127 

    2.5%      25%      50%      75%    97.5% 
-39.3472 -30.9354 -24.6569 -20.1263 -13.5805 



 4. Empirical mean, standard deviation, and quantiles for the average infectious periods,
          Mean             SD       Naive SE Time-series SE 
    0.52338927     0.03172609     0.00448675     0.00965965 

    2.5%      25%      50%      75%    97.5% 
0.469662 0.498067 0.526398 0.544215 0.581773 



 5. acceptance.rate : 
            Alpha_s[1]      Spatial parameter Infectious period rate 
              0.387755               0.387755               1.000000 
> 
> ## distance-based and network-based SIR ILMs ##
> set.seed(22)
> data(SpatialNetData)
> ## performing the MCMC-tool for analyzing the fully observed spatial and
> ## network data
> ## under the SIR distance-based and network-based continuous-time ILM:
> suspar <- list(NULL)
> suspar[[1]]<-list(c(0.08,0.2),matrix(c("gamma", "gamma", 1, 1, 0.01, 0.01, 0.1, 0.5),
+ ncol = 4, nrow = 2))
> suspar[[2]]<- SpatialNetData[[2]]
> kernel1 <- list(c(5, 0.5), matrix(c("gamma", "gamma", 1, 1,
+ 0.01, 0.01, 0.5, 1), ncol = 4, nrow = 2))
> 
> mcmcres3 <- epictmcmc(object = SpatialNetData[[1]], distancekernel = "powerlaw",
+ datatype = "known epidemic", nsim = 50,
+ control.sus = suspar, kernel.par = kernel1)
************************************************ 
Start performing MCMC for the  known epidemic  SIR ILM for 
50 iterations 
************************************************ 
> #plot(mcmcres3, plottype = "parameter")
> print(mcmcres3)

********************************************************* 
Model: SIR both -based continuous-time ILM 
Method: Markov chain Monte Carlo (MCMC) 
Data assumption: fully observed epidemic
********************************************************* 

Output: 

 parameter.samples : 
Markov Chain Monte Carlo (MCMC) output:
Start = 1 
End = 7 
Thinning interval = 1 
     Alpha_s[1] Alpha_s[2] Spatial parameter Network parameter
[1,]       0.08  0.2000000           5.00000          0.500000
[2,]       0.08  0.2000000           4.92086          0.500000
[3,]       0.08  0.2000000           4.38342          0.500000
[4,]       0.08  0.0656835           4.38342          0.500000
[5,]       0.08  0.0656835           4.38342          0.500000
[6,]       0.08  0.0656835           4.15239          0.500000
[7,]       0.08  0.0656835           4.15239          0.373708

 log.likelihood : 
Markov Chain Monte Carlo (MCMC) output:
Start = 1 
End = 7 
Thinning interval = 1 
[1] -1685.198 -1465.431  -596.536  -583.809  -583.809  -410.641  -410.011

Available components:
[1] "compart.framework" "kernel.type"       "data.assumption"  
[4] "parameter.samples" "log.likelihood"    "acceptance.rate"  
[7] "number.iteration"  "number.parameter"  "number.chains"    
> summary(mcmcres3)

********************************************************* 
Model: SIR both-based continuous-time ILM 
Method: Markov chain Monte Carlo (MCMC) 
Data assumption: fully observed epidemic 
number.chains : 1 chains 
number.iteration : 49 iterations 
number.parameter : 4 parameters 

********************************************************* 


 1. Empirical mean and standard deviation for each variable,
plus standard error of the mean:
                       Mean        SD   Naive SE Time-series SE
Alpha_s[1]        0.0231832 0.0260979 0.00369080      0.0160319
Alpha_s[2]        0.1272768 0.0476480 0.00673845      0.0217451
Spatial parameter 2.1158366 1.1783617 0.16664551      0.7689205
Network parameter 1.1630018 0.6721603 0.09505782      0.2556254



 2. Quantiles for each variable:
                        2.5%        25%       50%       75%   97.5%
Alpha_s[1]        0.00433566 0.00433566 0.0132278 0.0247037 0.08000
Alpha_s[2]        0.06568355 0.07981772 0.1185407 0.1796567 0.20000
Spatial parameter 0.98367282 1.33422426 1.5163194 2.4045377 4.79994
Network parameter 0.14692978 0.52418031 1.2013297 1.7832496 2.39566



 3. Empirical mean, standard deviation, and quantiles for the log likelihood,
          Mean             SD       Naive SE Time-series SE 
     -175.8228       321.9825        45.5352       126.3105 

      2.5%        25%        50%        75%      97.5% 
-1269.9296   -71.7511   -62.1213   -60.9960   -59.5622 



 4. acceptance.rate : 
       Alpha_s[1]        Alpha_s[2] Spatial parameter Network parameter 
        0.0612245         0.1836735         0.4897959         0.4489796 
> 
> ## network-based SIR ILMs ##
> set.seed(22)
> data(NetworkData)
> ## performing the MCMC-tool for analyzing the fully observed network data
> ## under the SIR network-based continuous-time ILM:
> 
> suspar <- list(NULL)
> suspar[[1]]<-list(c(0.08,0.5),matrix(c("gamma", "gamma", 1, 1, 1, 1, 0.1, 0.5),
+ ncol = 4, nrow = 2))
> suspar[[2]]<- NetworkData[[2]]
> 
> mcmcres4 <- epictmcmc(object = NetworkData[[1]], datatype = "known epidemic",
+ nsim = 50, control.sus = suspar)
************************************************ 
Start performing MCMC for the  known epidemic  SIR ILM for 
50 iterations 
************************************************ 
> #plot(mcmcres4, plottype = "parameter")
> print(mcmcres4)

********************************************************* 
Model: SIR network -based continuous-time ILM 
Method: Markov chain Monte Carlo (MCMC) 
Data assumption: fully observed epidemic
********************************************************* 

Output: 

 parameter.samples : 
Markov Chain Monte Carlo (MCMC) output:
Start = 1 
End = 7 
Thinning interval = 1 
     Alpha_s[1] Alpha_s[2]
[1,]  0.0800000   0.500000
[2,]  0.0800000   0.500000
[3,]  0.0800000   0.500000
[4,]  0.0800000   0.500000
[5,]  0.0800000   0.541302
[6,]  0.0800000   0.406985
[7,]  0.0958326   0.406985

 log.likelihood : 
Markov Chain Monte Carlo (MCMC) output:
Start = 1 
End = 7 
Thinning interval = 1 
[1] -54.8056 -54.8056 -54.8056 -54.8056 -54.9080 -54.9925 -55.1539

Available components:
[1] "compart.framework" "kernel.type"       "data.assumption"  
[4] "parameter.samples" "log.likelihood"    "acceptance.rate"  
[7] "number.iteration"  "number.parameter"  "number.chains"    
> summary(mcmcres4)

********************************************************* 
Model: SIR network-based continuous-time ILM 
Method: Markov chain Monte Carlo (MCMC) 
Data assumption: fully observed epidemic 
number.chains : 1 chains 
number.iteration : 49 iterations 
number.parameter : 2 parameters 

********************************************************* 


 1. Empirical mean and standard deviation for each variable,
plus standard error of the mean:
                Mean        SD   Naive SE Time-series SE
Alpha_s[1] 0.0799349 0.0255693 0.00361605     0.00603613
Alpha_s[2] 0.5244400 0.1211571 0.01713420     0.02085079



 2. Quantiles for each variable:
                2.5%       25%      50%      75%    97.5%
Alpha_s[1] 0.0378314 0.0623953 0.078657 0.101391 0.123595
Alpha_s[2] 0.2927052 0.4208295 0.500000 0.645876 0.686824



 3. Empirical mean, standard deviation, and quantiles for the log likelihood,
          Mean             SD       Naive SE Time-series SE 
   -55.7300414      0.6170862      0.0872692      0.1980547 

    2.5%      25%      50%      75%    97.5% 
-56.8526 -56.1493 -55.7465 -55.2689 -54.8056 



 4. acceptance.rate : 
Alpha_s[1] Alpha_s[2] 
  0.367347   0.306122 
> 
> ## network-based SINR ILMs ##
> set.seed(22)
> data(NetworkDataSINR)
> names(NetworkDataSINR)
[1] "loc" "net" "cov" "epi"
> 
> netSINR<-as.epidat(type = "SINR", kerneltype = "network", incub.time = NetworkDataSINR$epi[,4], inf.time = NetworkDataSINR$epi[,6], rem.time = NetworkDataSINR$epi[,2], id.individual = NetworkDataSINR$epi[,1], location  = NetworkDataSINR$loc, network = NetworkDataSINR$net, network.type = "powerlaw")
> 
> ## performing the MCMC-tool for analyzing the fully observed network data
> ## under the SINR network-based continuous-time ILM:
> suspar <- list(NULL)
> suspar[[1]]<-list(c(0.08,0.2),matrix(c("gamma", "gamma", 1, 1, 0.01, 0.01, 0.05, 0.5),
+ ncol = 4, nrow = 2))
> suspar[[2]]<- NetworkDataSINR$cov
> 
> mcmcres5 <- epictmcmc(object = netSINR, datatype = "known epidemic",
+ nsim = 500, control.sus = suspar)
************************************************ 
Start performing MCMC for the  known epidemic  SINR ILM for 
500 iterations 
************************************************ 
> 
> mcmcres5

********************************************************* 
Model: SINR network -based continuous-time ILM 
Method: Markov chain Monte Carlo (MCMC) 
Data assumption: fully observed epidemic
********************************************************* 

Output: 

 parameter.samples : 
Markov Chain Monte Carlo (MCMC) output:
Start = 1 
End = 7 
Thinning interval = 1 
     Alpha_s[1] Alpha_s[2]
[1,]  0.0800000   0.200000
[2,]  0.0921908   0.393152
[3,]  0.0842770   0.502432
[4,]  0.1428780   1.195509
[5,]  0.0891341   1.237414
[6,]  0.0891341   1.237414
[7,]  0.0915133   1.650862

 log.likelihood : 
Markov Chain Monte Carlo (MCMC) output:
Start = 1 
End = 7 
Thinning interval = 1 
[1] -57.9014 -48.5078 -45.7331 -36.8694 -35.9318 -35.9318 -34.1604

Available components:
[1] "compart.framework" "kernel.type"       "data.assumption"  
[4] "parameter.samples" "log.likelihood"    "acceptance.rate"  
[7] "number.iteration"  "number.parameter"  "number.chains"    
> #plot(mcmcres5, plottype = "parameter")
> print(mcmcres5)

********************************************************* 
Model: SINR network -based continuous-time ILM 
Method: Markov chain Monte Carlo (MCMC) 
Data assumption: fully observed epidemic
********************************************************* 

Output: 

 parameter.samples : 
Markov Chain Monte Carlo (MCMC) output:
Start = 1 
End = 7 
Thinning interval = 1 
     Alpha_s[1] Alpha_s[2]
[1,]  0.0800000   0.200000
[2,]  0.0921908   0.393152
[3,]  0.0842770   0.502432
[4,]  0.1428780   1.195509
[5,]  0.0891341   1.237414
[6,]  0.0891341   1.237414
[7,]  0.0915133   1.650862

 log.likelihood : 
Markov Chain Monte Carlo (MCMC) output:
Start = 1 
End = 7 
Thinning interval = 1 
[1] -57.9014 -48.5078 -45.7331 -36.8694 -35.9318 -35.9318 -34.1604

Available components:
[1] "compart.framework" "kernel.type"       "data.assumption"  
[4] "parameter.samples" "log.likelihood"    "acceptance.rate"  
[7] "number.iteration"  "number.parameter"  "number.chains"    
> summary(mcmcres5)

********************************************************* 
Model:SINR network-based continuous-time ILM 
Method: Markov chain Monte Carlo (MCMC) 
Data assumption: fully observed epidemic 
number.chains : 1 chains 
number.iteration : 499 iterations 
number.parameter : 2 parameters
********************************************************* 


 1. Empirical mean and standard deviation for each variable,
plus standard error of the mean:
               Mean        SD   Naive SE Time-series SE
Alpha_s[1] 0.104391 0.0268505 0.00120079     0.00241341
Alpha_s[2] 2.255763 0.5584145 0.02497306     0.07358180



 2. Quantiles for each variable:
                2.5%       25%       50%      75%    97.5%
Alpha_s[1] 0.0590052 0.0858674 0.0993167 0.121108 0.164175
Alpha_s[2] 1.1914624 1.9126262 2.2150284 2.664166 3.362149



 3. Empirical mean, standard deviation, and quantiles for the log likelihood,
          Mean             SD       Naive SE Time-series SE 
   -34.6860101      1.6608976      0.0742776      0.1557291 

    2.5%      25%      50%      75%    97.5% 
-37.4167 -35.0181 -34.2680 -33.8277 -33.5738 



 4. acceptance.rate : 
Alpha_s[1] Alpha_s[2] 
  0.547094   0.699399 
> 
> suspar <- list(NULL)
> suspar[[1]]<-list(c(0.08,0.2),matrix(c("gamma", "gamma", 1, 1, 0.01, 0.01, 0.05, 0.5),
+ ncol = 4, nrow = 2))
> suspar[[2]]<- NetworkDataSINR$cov
> delta1<-list(1,2,c(4,2))
> spark<-list(1,matrix(c("gamma", 1, 0.01, 0.05), ncol = 4, nrow = 1))
> 
> mcmcres5 <- epictmcmc(object = netSINR, datatype = "known removal",
+ nsim = 500, control.sus = suspar, spark.par = spark, delta = delta1)
************************************************ 
Start performing MCMC for the  known removal  SINR ILM for 
500 iterations 
************************************************ 
> 
> print(mcmcres5)

********************************************************* 
Model: SINR network -based continuous-time ILM 
Method: Data augmented Markov chain Monte Carlo (DA-MCMC) 
Data assumption: partially observed epidemic (unknown infection times)
********************************************************* 

Output: 

 parameter.samples : 
Markov Chain Monte Carlo (MCMC) output:
Start = 1 
End = 7 
Thinning interval = 1 
     Alpha_s[1] Alpha_s[2]    Spark Incubation period rate
[1,] 0.08000000   0.200000 1.000000               2.000000
[2,] 0.08000000   0.200000 1.000000               0.377508
[3,] 0.06970123   0.147506 1.000000               0.609031
[4,] 0.00265249   0.147506 0.996868               0.335893
[5,] 0.00265249   0.147506 0.996868               0.560736
[6,] 0.00265249   0.301711 0.996868               0.430007
[7,] 0.00265249   0.297776 0.945972               0.361570

 log.likelihood : 
Markov Chain Monte Carlo (MCMC) output:
Start = 1 
End = 7 
Thinning interval = 1 
[1] -424.604 -318.368 -333.921 -302.660 -318.866 -304.719 -284.737

 infection.times.samples : 
Markov Chain Monte Carlo (MCMC) output:
Start = 1 
End = 7 
Thinning interval = 1 
     [,1]     [,2]     [,3]     [,4]     [,5]     [,6]     [,7]    [,8]
[1,]    0 0.798650 0.981407 1.150897 1.188763 1.404446 1.465774 1.55333
[2,]    0 0.499732 0.657686 0.480468 1.188763 2.530820 1.249633 1.55333
[3,]    0 0.499732 1.130589 0.480468 0.103574 2.530820 1.249633 1.55333
[4,]    0 0.499732 1.130589 0.480468 0.103574 2.530820 1.249633 1.55333
[5,]    0 0.499732 1.130589 0.480468 0.103574 2.722829 0.215008 1.55333
[6,]    0 0.223843 1.130589 0.748223 0.103574 0.427577 0.215008 1.55333
[7,]    0 0.223843 1.130589 1.241965 0.103574 0.427577 0.215008 1.55333
         [,9]   [,10]    [,11]    [,12]   [,13]    [,14]   [,15]    [,16]
[1,] 1.680805 1.69596 1.711758 1.836505 1.98264 2.342569 2.38468 2.507263
[2,] 0.697208 1.69596 1.711758 0.964088 2.65327 2.342569 2.38468 2.507263
[3,] 0.697208 3.80069 1.514523 0.964088 2.05445 0.566992 3.08232 0.796542
[4,] 2.267777 3.80069 1.851911 0.964088 2.05445 0.399615 3.08232 0.796542
[5,] 3.811607 3.77140 1.851911 0.964088 2.05445 0.399615 0.32994 0.796542
[6,] 1.619746 1.41366 1.283158 0.964088 2.05445 0.399615 0.32994 0.796542
[7,] 2.990378 1.41366 0.894828 0.964088 2.05445 0.399615 0.32994 0.796542
       [,17]   [,18]   [,19]   [,20]   [,21]   [,22]   [,23]   [,24]   [,25]
[1,] 2.57691 2.59159 2.67964 2.70830 2.78291 2.88363 3.00249 3.17423 3.56576
[2,] 2.57691 2.98036 2.67964 3.72241 1.60874 2.88363 3.00249 3.17423 3.56576
[3,] 1.84042 2.69132 1.44105 3.72241 1.34286 2.95763 3.00249 3.17423 3.56576
[4,] 1.84042 2.69132 1.44105 3.72241 1.43536 2.95763 2.10878 3.17423 3.56576
[5,] 1.84042 2.69132 1.44105 3.43700 1.05330 2.88220 2.10878 2.50835 3.70938
[6,] 1.84042 1.65894 1.44105 3.40244 3.01211 3.08337 2.10878 3.48962 4.79620
[7,] 2.94762 1.65894 3.87147 3.40244 3.01211 2.26047 2.10878 2.41854 5.38670
        [,26]   [,27]   [,28]   [,29]   [,30]   [,31]   [,32]   [,33]   [,34]
[1,] 3.859196 4.03189 5.14651 5.74088 6.20128 6.39138 6.90974 7.88329 8.46363
[2,] 2.381537 4.03189 5.14651 5.74088 4.98871 6.39138 7.57937 7.51476 8.46363
[3,] 2.381537 4.03189 5.14651 5.74088 7.50633 1.79678 6.54359 6.35593 8.46363
[4,] 1.415022 2.97226 5.14651 5.74088 7.86739 1.79678 6.54359 6.35593 8.46363
[5,] 1.415022 2.97226 5.14651 5.74088 5.84400 1.79678 6.54359 8.15245 8.46363
[6,] 0.818126 3.42523 5.14651 4.33559 7.29166 1.79678 6.52771 3.94196 8.46363
[7,] 0.818126 2.28125 5.14651 4.33559 5.76639 1.79678 5.48353 3.94196 7.14591

 Average.incubation.periods : 
Markov Chain Monte Carlo (MCMC) output:
Start = 1 
End = 7 
Thinning interval = 1 
[1] 2.07371 2.00740 2.44279 2.28815 2.56920 2.64582 2.86066

Available components:
 [1] "compart.framework"          "kernel.type"               
 [3] "data.assumption"            "parameter.samples"         
 [5] "log.likelihood"             "acceptance.rate"           
 [7] "number.iteration"           "number.parameter"          
 [9] "number.chains"              "infection.times.samples"   
[11] "Average.incubation.periods"
> summary(mcmcres5)

********************************************************* 
Model: SINR network -based continuous-time ILM 
Method: Data augmented Markov chain Monte Carlo (DA-MCMC) 
Data assumption: partially observed epidemic (unknown infection times) 
number.chains : 1 chains 
number.iteration : 499 iterations 
number.parameter : 4 parameters 

********************************************************* 


 1. Empirical mean and standard deviation for each variable,
plus standard error of the mean:
                            Mean        SD   Naive SE Time-series SE
Alpha_s[1]             0.0901432 0.0422878 0.00189117     0.00905739
Alpha_s[2]             1.3426357 0.6300286 0.02817573     0.15872823
Spark                  0.0690621 0.1865990 0.00834496     0.07118797
Incubation period rate 0.6516658 0.1765595 0.00789598     0.04514386



 2. Quantiles for each variable:
                              2.5%        25%       50%       75%    97.5%
Alpha_s[1]             0.002244012 0.06257701 0.0962865 0.1181139 0.166238
Alpha_s[2]             0.200000000 0.87965838 1.2523315 1.7607854 2.671738
Spark                  0.000442772 0.00765814 0.0156120 0.0272933 0.834310
Incubation period rate 0.274160713 0.54931130 0.6589894 0.7488295 0.978796



 3. Empirical mean, standard deviation, and quantiles for the log likelihood,
          Mean             SD       Naive SE Time-series SE 
     -98.25200       39.60211        1.77106       10.46456 

     2.5%       25%       50%       75%     97.5% 
-235.8996  -98.0788  -89.0247  -81.4148  -70.1543 



 4. Empirical mean, standard deviation, and quantiles for the average incubation periods,
          Mean             SD       Naive SE Time-series SE 
     1.7626573      0.5845258      0.0261408      0.1583242 

   2.5%     25%     50%     75%   97.5% 
1.21330 1.45875 1.60276 1.80631 3.82202 



 5. acceptance.rate : 
            Alpha_s[1]             Alpha_s[2]                  Spark 
              0.507014               0.575150               0.306613 
Incubation period rate 
              1.000000 
> #plot(mcmcres5, plottype = "parameter")
> #plot(mcmcres5, plottype = "inf.times")
> 
> suspar <- list(NULL)
> suspar[[1]]<-list(c(0.08,0.2),matrix(c("gamma", "gamma", 1, 1, 0.01, 0.01, 0.05, 0.5),
+ ncol = 4, nrow = 2))
> suspar[[2]]<- NetworkDataSINR$cov
> delta1<-list(NULL)
> delta1[[1]]<-c(1,1)
> delta1[[2]]<-c(2,2)
> delta1[[3]]<-matrix(c(4,4,2,2),ncol=2,nrow=2)
> spark<-list(1,matrix(c("gamma", 1, 0.01, 0.05), ncol = 4, nrow = 1))
> 
> mcmcres5 <- epictmcmc(object = netSINR, datatype = "unknown removal",
+ nsim = 500, control.sus = suspar, spark.par = spark, delta = delta1)
************************************************ 
Start performing MCMC for the  unknown removal  SINR ILM for 
500 iterations 
************************************************ 
> 
> print(mcmcres5)

********************************************************* 
Model: SIR network -based continuous-time ILM 
Method: Data augmented Markov chain Monte Carlo (DA-MCMC) 
Data assumption: partially observed epidemic (unknown infection & removal times)
********************************************************* 

Output: 

 parameter.samples : 
Markov Chain Monte Carlo (MCMC) output:
Start = 1 
End = 7 
Thinning interval = 1 
     Alpha_s[1] Alpha_s[2]    Spark Incubation period rate Delay period rate
[1,]  0.0800000  0.2000000 1.000000               2.000000           2.00000
[2,]  0.0631093  0.2000000 1.000000               0.463754           2.11551
[3,]  0.0631093  0.2000000 0.926837               0.508486           2.91697
[4,]  0.0631093  0.2000000 0.926837               0.465738           2.81587
[5,]  0.0631093  0.2000000 0.926837               0.425564           3.04722
[6,]  0.0617764  0.0863188 0.926837               0.487198           2.34059
[7,]  0.0100152  0.1809111 0.926837               0.407987           1.96173

 log.likelihood : 
Markov Chain Monte Carlo (MCMC) output:
Start = 1 
End = 7 
Thinning interval = 1 
[1] -462.735 -346.151 -339.682 -331.641 -339.933 -333.702 -319.883

 infection.times.samples : 
Markov Chain Monte Carlo (MCMC) output:
Start = 1 
End = 7 
Thinning interval = 1 
     [,1]     [,2]     [,3]    [,4]    [,5]     [,6]    [,7]     [,8]     [,9]
[1,]    0 0.798650 0.981407 1.15090 1.18876 1.404446 1.46577 1.553328 1.680805
[2,]    0 0.798650 0.609762 1.15090 1.69215 1.404446 1.25781 1.931474 1.644585
[3,]    0 0.962407 0.609762 1.67894 1.69215 1.404446 2.25760 0.082044 1.644585
[4,]    0 1.031230 0.446182 1.27479 1.69215 1.404446 2.20787 2.721110 1.091716
[5,]    0 1.031230 0.446182 1.09108 1.69215 1.404446 2.20787 2.721110 3.579887
[6,]    0 1.337644 2.381303 1.09108 1.69215 1.404446 2.20787 2.721110 2.931319
[7,]    0 1.337644 2.656687 2.18727 3.32539 0.921639 2.83233 3.134041 0.870639
        [,10]   [,11]   [,12]   [,13]   [,14]    [,15]    [,16]   [,17]
[1,] 1.695957 1.71176 1.83651 1.98264 2.34257 2.384676 2.507263 2.57691
[2,] 1.953689 1.71176 1.83651 3.15612 2.28773 2.384676 2.507263 2.57691
[3,] 1.953689 1.72029 3.36629 3.15612 2.47253 1.402250 2.507263 3.71029
[4,] 0.956114 2.72288 3.36629 3.15612 1.07158 0.539254 1.684692 3.83622
[5,] 0.956114 2.72288 3.22510 3.22896 1.07158 3.465129 0.239833 3.83622
[6,] 0.956114 1.61113 3.22637 2.55302 1.07158 3.465129 0.239833 5.19614
[7,] 1.421447 1.89511 3.16870 2.84106 1.17156 3.465129 0.239833 5.19614
        [,18]   [,19]   [,20]    [,21]   [,22]   [,23]   [,24]   [,25]   [,26]
[1,] 2.591592 2.67964 2.70830 2.782910 2.88363 3.00249 3.17423 3.56576 3.85920
[2,] 2.591592 2.67964 3.03162 2.084053 2.30065 2.41378 2.86030 3.56576 3.90135
[3,] 0.824271 2.33634 3.03162 1.426486 2.50337 2.36822 4.02787 2.57131 3.39042
[4,] 0.824271 1.34319 3.03162 1.020939 2.24953 2.36822 4.02787 2.57131 3.39042
[5,] 0.824271 2.69053 3.03162 1.020939 2.24953 3.50079 4.02787 2.57131 2.02577
[6,] 0.201719 1.30044 3.03162 1.020939 2.63805 3.71934 2.19472 2.57131 2.02577
[7,] 0.201719 1.30044 2.57715 0.262596 2.63805 3.90713 2.19472 2.57131 2.02577
       [,27]   [,28]   [,29]   [,30]   [,31]    [,32]   [,33]   [,34]
[1,] 4.03189 5.14651 5.74088 6.20128 6.39138 6.909738 7.88329 8.46363
[2,] 3.57070 5.14651 5.74088 5.16583 6.39138 0.706856 7.46777 8.46363
[3,] 3.57070 4.51889 5.74088 5.16583 1.69278 0.706856 6.30382 8.46363
[4,] 3.57070 4.51889 5.74088 5.16583 1.69278 0.706856 7.90897 8.46363
[5,] 3.57070 8.45256 5.74088 5.16583 1.69278 0.706856 4.66720 8.46363
[6,] 3.57070 8.14775 5.74088 5.60772 1.69278 0.706856 2.06022 8.46363
[7,] 3.57070 8.32478 5.74088 5.60772 1.69278 0.706856 2.06022 8.46363

 Average.incubation.periods : 
Markov Chain Monte Carlo (MCMC) output:
Start = 1 
End = 7 
Thinning interval = 1 
[1] 2.07371 2.14161 2.54474 2.41185 2.42536 2.38297 2.50805

 removal.times.samples : 
Markov Chain Monte Carlo (MCMC) output:
Start = 1 
End = 7 
Thinning interval = 1 
        [,1]    [,2]    [,3]    [,4]    [,5]    [,6]    [,7]    [,8]    [,9]
[1,] 4.50490 2.29471 3.70100 2.27570 6.94112 3.09950 4.35899 4.00825 4.70701
[2,] 2.41519 2.29471 3.88444 2.27570 5.88941 3.09950 4.95810 3.93696 4.44331
[3,] 2.21610 3.34211 3.88444 2.36352 5.88941 3.09950 5.21841 4.12833 4.44331
[4,] 2.03101 2.32819 3.55542 2.56197 5.88941 3.09950 4.88689 3.85544 4.72153
[5,] 2.70881 2.32819 3.55542 3.03617 5.88941 3.09950 4.88689 3.85544 5.04278
[6,] 1.90641 2.67777 3.62883 3.03617 5.88941 3.09950 4.88689 3.85544 4.58645
[7,] 1.77673 2.67777 5.19275 2.68625 6.34543 2.90739 4.15495 4.20396 5.48281
       [,10]   [,11]   [,12]   [,13]   [,14]   [,15]   [,16]   [,17]   [,18]
[1,] 4.74021 3.15956 3.53135 5.08073 4.36785 4.60618 3.63237 6.09532 3.23545
[2,] 5.53037 3.15956 3.53135 4.64449 4.67583 4.60618 3.63237 6.09532 3.23545
[3,] 5.53037 3.49333 3.37837 4.64449 3.71486 4.56704 3.63237 6.08600 3.71692
[4,] 5.60290 3.42949 3.37837 4.64449 3.33725 4.83103 4.06271 6.02694 3.71692
[5,] 5.60290 3.42949 3.55667 4.57998 3.33725 4.87355 3.88993 6.02694 3.71692
[6,] 5.60290 3.38442 3.51111 4.87619 3.33725 4.87355 3.88993 6.48035 3.72279
[7,] 4.73409 3.86058 3.38885 5.22635 3.77899 4.87355 3.88993 6.48035 3.72279
       [,19]   [,20]   [,21]   [,22]   [,23]   [,24]   [,25]   [,26]   [,27]
[1,] 4.91063 4.00842 4.16219 5.97581 4.14633 5.40700 6.47184 6.24091 7.59606
[2,] 4.91063 4.23561 4.57990 4.30346 4.19099 5.29137 6.47184 6.14466 6.99496
[3,] 4.07798 4.23561 4.24590 4.14833 4.54416 4.78023 6.49301 6.23139 6.99496
[4,] 4.11839 4.23561 4.28167 4.36789 4.54416 4.78023 6.49301 6.23139 6.99496
[5,] 4.22924 4.23561 4.28167 4.36789 4.39038 4.78023 6.49301 6.24538 6.99496
[6,] 4.31540 4.23561 4.28167 4.11968 4.97525 4.81242 6.49301 6.24538 6.99496
[7,] 4.31540 3.98216 4.71975 4.11968 4.24019 4.81242 6.49301 6.24538 6.99496
        [,28]   [,29]    [,30]   [,31]   [,32]   [,33]   [,34]
[1,]  9.85260 9.79913 11.43192 8.28133 9.17592 8.61186 11.4464
[2,]  9.85260 9.79913  8.20512 8.28133 8.77855 9.19164 11.4464
[3,]  9.56259 9.79913  8.20512 8.51514 8.77855 8.81332 11.4464
[4,]  9.56259 9.79913  8.20512 8.51514 8.77855 8.72112 11.4464
[5,] 10.24497 9.79913  8.20512 8.51514 8.77855 9.03137 11.4464
[6,]  9.67143 9.79913  8.40749 8.51514 8.77855 9.10841 11.4464
[7,]  9.79480 9.79913  8.40749 8.51514 8.77855 9.10841 11.4464

 Average.delay.periods : 
Markov Chain Monte Carlo (MCMC) output:
Start = 1 
End = 7 
Thinning interval = 1 
[1] 0.472753 0.446615 0.248111 0.389215 0.284422 0.460111 0.334455

Available components:
 [1] "compart.framework"          "kernel.type"               
 [3] "data.assumption"            "parameter.samples"         
 [5] "log.likelihood"             "acceptance.rate"           
 [7] "number.iteration"           "number.parameter"          
 [9] "number.chains"              "infection.times.samples"   
[11] "Average.incubation.periods" "removal.times.samples"     
[13] "Average.delay.periods"     
> summary(mcmcres5)

********************************************************* 
Model:SINR network-based continuous-time ILM 
Method: Data augmented Markov chain Monte Carlo (DA-MCMC) 
Data assumption: partially observed epidemic (unknown infection & removal times) 
number.chains : 1 chains 
number.iteration : 499 iterations 
number.parameter : 5 parameters 

********************************************************* 


 1. Empirical mean and standard deviation for each variable,
plus standard error of the mean:
                            Mean       SD   Naive SE Time-series SE
Alpha_s[1]             0.0906850 0.035796 0.00160084     0.00552482
Alpha_s[2]             1.9264352 0.770483 0.03445704     0.25045562
Spark                  0.0475757 0.161995 0.00724462     0.05230526
Incubation period rate 0.8131876 0.203314 0.00909250     0.02769249
Delay period rate      1.1895168 0.634408 0.02837160     0.27874133



 2. Quantiles for each variable:
                              2.5%        25%        50%       75%    97.5%
Alpha_s[1]             0.002478839 0.06816303 0.09021533 0.1142395 0.151443
Alpha_s[2]             0.217856373 1.44259630 1.91260662 2.4290290 3.431349
Spark                  0.000565167 0.00343653 0.00661801 0.0138649 0.674608
Incubation period rate 0.398069175 0.69175877 0.79999615 0.9435593 1.211758
Delay period rate      0.399093948 0.71843162 1.02470640 1.4876172 2.697205



 3. Empirical mean, standard deviation, and quantiles for the log likelihood,
          Mean             SD       Naive SE Time-series SE 
    -122.50923       39.82169        1.78088       10.83528 

     2.5%       25%       50%       75%     97.5% 
-258.3478 -121.9456 -114.2149 -106.1493  -94.0826 



 4. Empirical mean, standard deviation, and quantiles for the average incubation periods,
          Mean             SD       Naive SE Time-series SE 
     1.3811755      0.4054302      0.0181314      0.0951797 

    2.5%      25%      50%      75%    97.5% 
0.969978 1.155928 1.294316 1.453665 2.881035 



 5. Empirical mean, standard deviation, and quantiles for the average delay periods,
          Mean             SD       Naive SE Time-series SE 
     1.1222098      0.5685896      0.0254281      0.2430022 

    2.5%      25%      50%      75%    97.5% 
0.311357 0.674145 1.050419 1.420156 2.385745 



 6. acceptance.rate : 
            Alpha_s[1]             Alpha_s[2]                  Spark 
              0.521042               0.653307               0.252505 
Incubation period rate      Delay period rate 
              1.000000               1.000000 
> #plot(mcmcres5, plottype = "parameter")
> #plot(mcmcres5, plottype = "inf.times")
> #plot(mcmcres5, plottype = "rem.times")
> 
> proc.time()
   user  system elapsed 
  3.547   0.332   3.913 
